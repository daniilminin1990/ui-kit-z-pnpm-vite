{
  "compilerOptions": {
    "target": "ES2020",
    "useDefineForClassFields": true,
    "lib": ["ES2020", "DOM", "DOM.Iterable"],
    "module": "ESNext",
    "skipLibCheck": true,

    /* Bundler mode */
    "moduleResolution": "bundler",
//    "allowImportingTsExtensions": false,
    "resolveJsonModule": true,
    "isolatedModules": true,
//    "moduleDetection": "force",
//    "declaration": true,  // Если noEmit не включен, то для сборки вместо него вот это - Это для создания типов
////    "emitDeclarationOnly": false, // Если noEmit не включен, то для сборки вместо него вот это. Оно делает чисто типы, а не js
    "declaration": true, // Убедитесь, что это включено
    "emitDeclarationOnly": false, // Отключите, чтобы скомпилировать как .js, так и .d.ts
//    "outDir": "./dist",
//    "declarationDir": "./dist/types", // Указываем директорию для деклараций
//    "noEmit": true,
    "jsx": "react-jsx",

    /* Linting */
    "strict": true,
    "noUnusedLocals": false,
    "noUnusedParameters": false,
    "noFallthroughCasesInSwitch": true,
    "noUncheckedSideEffectImports": true,
    // Если один оставляем tsconfig, тогда добавить
//    "resolveJsonModule": true, // Добавляем поддержку JSON модулей Иначе в vite.config,ts ругается на импорт packageJson
    "allowSyntheticDefaultImports": true // Добавляем поддержку дефолтных импортов Иначе в vite.config,ts ругается на импорт packageJson
  },
//  "include": ["src"],
  "include": ["src", "vite.config.ts"], // И тут добавляем vite.config.ts
  "exclude": ["node_modules", "dist"]
}
